/**
 * Screen Manager
 * ===
 *
 * @module screenManager
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * ScreenManager
 * @class
 */
class ScreenManager {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * @private
   * @type {HTMLElement}
   */
  _container;

  /**
   * @private
   * @type {Array}
   */
  _screens;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * Screen
   * @constructor
   */
  constructor(container) {
    this._container = container;
    this._screens = [];
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   *
   * @public
   * @param input
   */
  handleInput(input) {
    const SCREEN = this._screens[this._screens.length - 1];

    SCREEN.handleInput(input);
  }

  /**
   *
   * @public
   * @param screen
   */
  pushScreen(screen) {

  }

  /**
   *
   * @public
   */
  popScreen() {

  }

  /**
   * @public
   */
  render() {
    for (let idx = 0; idx < this._screens.length; idx++) {
      const SCREEN = this._screens[idx];

    }
  }

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Static factory method.
   * @static
   * @param {string} containerId - The id for the container element.
   *
   * @return {ScreenManager} - A new screen manager instance.
   */
  static createInstance(containerId) {
    const CONTAINER = document.getElementById(containerId);

    return new ScreenManager(CONTAINER);
  }
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default ScreenManager;
