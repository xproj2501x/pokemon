/**
 * Display
 * ===
 *
 * @module Display
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * Display
 * @class
 */
class Display {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * @private
   * @type {HTMLElement}
   */
  _container;

  /**
   * @private
   * @type {HTMLElement}
   */
  _canvas;

  /**
   * @private
   * @type {}
   */
  _context;

  /**
   * @private
   * @type {number}
   */
  _width;

  /**
   * @private
   * @type {number}
   */
  _height;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////


  /**
   * Display
   * @constructor
   */
  constructor() {
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////
  clear() {
    this._context.clearRect(0, 0, this._width, this._height);
  }

  refresh() {
    this._height = this._canvas.height = this._container.clientHeight;
    this._width = this._canvas.width = this._container.clientWidth;
  }

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Static factory method.
   * @static
   *
   * @return {Display} - A new display instance.
   */
  static create() {
    return new Display();
  }
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default Display();
