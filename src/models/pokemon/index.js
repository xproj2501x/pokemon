class UnencryptedBlock {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * @private
   * @type {number}
   */
  _key;

  /**
   * @private
   * @type {number}
   */
  _checksum;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * @public
   * @readonly
   * @type {number}
   */
  get key() {
    return this._key;
  }

  /**
   * @public
   * @readonly
   * @type {number}
   */
  get checksum() {
    return this._checksum;
  }

  /**
   * BlockA
   * @constructor
   * @param {object} data -
   */
  constructor(data) {
    this._key = data.key;
    this._checksum = data.checksum;
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Static factory method.
   * @static
   * @param {object} data -
   * @return {UnencryptedBlock}
   */
  static createInstance(data) {
    return new UnencryptedBlock(data);
  }
}

/**
 * Pokemon data
 * @class
 */
class BlockA {
  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  _nationalPokedexId;
  _heldItem;
  _originalTrainerId;
  _originalTrainerSecretId;
  _experiencePoints;
  _ability;
  _hitsOnTrainingBag;
  _personalityValue;
  _nature;
  _flags;
  _hpEffortValue;
  _attackEffortValue;
  _defenseEffortValue;
  _speedEffortValue;
  _specialAttackEffortValue;
  _specialDefenseEffortValue;
  _contestCool;
  _contestBeauty;
  _contestCute;
  _contestSmart;
  _contestTough;
  _contestSheen;
  _markings;
  _pokerus;
  _goldMedalTrainingFlags;
  _ribbons;
  _contestMemory;
  _battleMemory;
  _superTrainingFlags;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * BlockA
   * @constructor
   */
  constructor() {

  }
  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
}

/**
 * Trainer Data
 * @class
 */
class BlockB {
  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  _nickname;
  _moveId1;
  _moveId2;
  _moveId3;
  _moveId4;
  _move1CurrentPP;
  _move2CurrentPP;
  _move3CurrentPP;
  _move4CurrentPP;
  _relearnMove1Id;
  _relearnMove2Id;
  _relearnMove3Id;
  _relearnMove4Id;
  _secretTrainingFlags;
  _individualValues;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * BlockB
   * @constructor
   */
  constructor() {

  }
  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
}

/**
 * Trainer Data
 * @class
 */
class BlockC {
  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  _lastNotOTHandler;
  _notOTGender;
  _currentHandler;
  _geolocation1;
  _geolocation2;
  _geolocation3;
  _geolocation4;
  _geolocation5;
  _notOTFriendship;
  _notOTAffecton
  _notOTMemoryIntensity;
  _notOTMemoryLine;
  _notOTMemoryFeeling;
  _notOTTextVar;
  _fullness;
  _enjoyment;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * BlockC
   * @constructor
   */
  constructor() {

  }
  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
}

/**
 * Trainer Data
 * @class
 */
class BlockD {
  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  _oTName;
  _oTFriendship;
  _otAffection;
  _otMemoryIntensity;
  _otMemoryLine;
  _otTextVar;
  _otMemoryFeeling;
  _dateEggReceived;
  _dateMet;
  _eggLocation;
  _metAt;
  _pokeball;
  _encounterLevel;
  _encounterType;
  _otGameId;
  _countryId;
  _regionId;
  _dsRegionId;
  _otLanguageId;


  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * BlockD
   * @constructor
   */
  constructor() {

  }
  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
}

/**
 * Trainer Data
 * @class
 */
class BlockE {
  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  _conditionFlags;
  _level;
  _currentHP;
  _maxHP;
  _attack;
  _defense;
  _speed;
  _spAttack;
  _spDefense;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * BlockE
   * @constructor
   */
  constructor() {

  }
  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
}