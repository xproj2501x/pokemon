/**
 * Menu State
 * ===
 *
 * @module menuState
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////
import State from '../../engine/state';
import {KEYBOARD} from '../../engine/constants';
import {STATE} from './constants';

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * MenuState
 * @class
 * @implements State
 */
class MenuState extends State {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * MenuState
   * @constructor
   */
  constructor() {
    super(STATE.MENU);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////
  run(event) {
    this._locked = true;
    switch (event) {
      case KEYBOARD.ENTER:
      case KEYBOARD.SPACE:
        this._nextState = STATE.PLAY;
        break;
      case KEYBOARD.KEY_H:
        break;
    }
  }

  enter() {
    const CONTAINER = document.getElementById('game');

    CONTAINER.innerHTML = `<i>MENU</i>`;
  }

  exit() {
    const CONTAINER = document.getElementById('game');

    this._nextState = null;
    this._locked = false;

    CONTAINER.innerHTML = ``;
  }

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Static factory method.
   * @return {MenuState}
   */
  static create() {
    return new MenuState();
  }
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default MenuState;
