/**
 * Layer
 * ===
 *
 * @module layer
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////

/**
 * Layer
 * @class
 */
class Layer {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  /**
   * @private
   * @type {number}
   */
  _size;

  /**
   * @private
   * @type {Array}
   */
  _data;

  /**
   * @private
   * @type {Array}
   */
  _thresholds;

  /**
   * @private
   * @type {Array}
   */
  _keys;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////


  /**
   * Layer
   * @constructor
   */
  constructor(size, data, keys, thresholds) {
    this._size = size;
    this._data = data;
    this._keys = keys;
    this._thresholds = thresholds;
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////
  getRawValue(x, y) {
    return this._data[x + (y * this._size)];
  }

  getValue(x, y) {
    const RAW_VALUE = this.getRawValue(x, y);

    for(let idx = 0; idx < this._thresholds.length; idx++) {
      if (RAW_VALUE <= this._thresholds[idx]) {
        return this._keys[idx];
      }
    }
  }
  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Static factory method
   * @static
   * @return {Layer}
   */
  static create(size, data, keys, thresholds) {
    return new Layer(size, data, keys, thresholds);
  }
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default Layer;
