/**
 * Movement System
 * ===
 *
 * @module movementSystem
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////
import System from '../../engine/system';
import {COMPONENT_TYPE} from '../components';

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * MovementSystem
 * @class
 * @extends System
 */
class MovementSystem extends System {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////
  _componentManager;

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * MovementSystem
   * @constructor
   */
  constructor() {
    super();
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   * Updates the state
   */
  update() {
    const VELOCITY_COMPONENTS = this._componentManager.getComponentsOfType(COMPONENT_TYPE.VELOCITY);
    const POSITION_COMPONENTS = this._componentManager.getComponentsOfType(COMPONENT_TYPE.POSITION);

    for (const VELOCITY in VELOCITY_COMPONENTS) {
      const OLD_POSITION = POSITION_COMPONENTS[VELOCITY.id];
      const NEW_POSITION = {x: OLD_POSITION.x + VELOCITY.dx, y: OLD_POSITION.y + VELOCITY.dy};
    }
  }

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default MovementSystem;
